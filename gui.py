# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'proto.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from main import *

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(600, 300)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setStyleSheet("background-color: #696969")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.heightForWidth(True)
        self.centralwidget.setObjectName("centralwidget")
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setBold(False)
        font.setWeight(50)

        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(360, 120, 221, 91))
        self.pushButton.setFont(font)
        self.pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton.setStyleSheet("background-color: orange; font-size: 14px; font-weight: 600")
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.clicked_button_start)

        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(360, 30 , 221, 71))
        self.pushButton_2.setCursor(QtGui.QCursor(QtCore.Qt.OpenHandCursor))
        self.pushButton_2.setStyleSheet("background-color: #ADFF2F; font-size: 12px;")
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.clicked_button_check)

        self.text_field = QtWidgets.QLabel(self.centralwidget)
        self.text_field.setGeometry(QtCore.QRect(30, 20, 281, 161))
        self.text_field.setObjectName("text_field")
        self.text_field.setMaximumSize(QtCore.QSize(550, 130))
        self.text_field.setStyleSheet("color: white; font-size: 18px;")
        self.text_field.setTextInteractionFlags(QtCore.Qt.TextEditable|QtCore.Qt.TextSelectableByMouse)
        self.text_field.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.text_field.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignTop)
        self.text_field.setWordWrap(True)
        self.text_field.setScaledContents(True)

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 456, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        MainWindow.setMenuBar(self.menubar)

        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.actionStart = QtWidgets.QAction(MainWindow)
        self.actionStart.setObjectName("actionStart")
        self.actionStop = QtWidgets.QAction(MainWindow)
        self.actionStop.setObjectName("actionStop")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.menuFile.addAction(self.actionStart)
        self.menuFile.addAction(self.actionStop)
        self.menuFile.addAction(self.actionExit)
        self.menubar.addAction(self.menuFile.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Happy B-Day Sender"))

        self.pushButton.setText(_translate("MainWindow", "ПОЗДРАВИТЬ АВТОМАТИЧЕСКИ"))
        self.pushButton_2.setText(_translate("MainWindow", "ВЫБРАТЬ И ПОЗДРАВИТЬ ВРУЧНУЮ"))

        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.actionStart.setText(_translate("MainWindow", "Start"))
        self.actionStart.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionStop.setText(_translate("MainWindow", "Stop"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionExit.setShortcut(_translate("MainWindow", "Ctrl+X"))

    def clicked_button_start(self):
        print('Запустили главную функцию программы')
        start_work()
        print('Успешно!')

    def clicked_button_check(self):   # Пока работает в ручном режиме, надо подумать как вынести результат с функции в другой модуль (main)
        print('Ищем подходящее поздравление...')
        choosen_message = create_bday_message()
        print(choosen_message)
        self.text_field.setText(choosen_message)
        self.update_text_field()

    def update_text_field(self):
        self.text_field.adjustSize()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
